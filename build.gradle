allprojects {
    apply plugin: 'idea'
}

idea {
    project {
        languageLevel = '1.8'
        vcs = 'Git'
    }
}

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "org.ajoberstar:semver-vcs-gradle-grgit:0.1.0-milestone.1"
    classpath "org.ajoberstar:gradle-git:1.2.0"
  }
}

apply plugin: 'org.ajoberstar.semver-vcs-grgit'
apply plugin: 'org.ajoberstar.release-opinion'

import org.ajoberstar.grgit.Grgit
import org.ajoberstar.gradle.git.release.opinion.Strategies

release {
  grgit = Grgit.open(project.file('.'))
  versionStrategy Strategies.FINAL

  // set the default, can be one already added or something else
  def strategy = Strategies.SNAPSHOT
  strategy = strategy.copyWith(createTag: true)
  defaultVersionStrategy = strategy
  tagStrategy {
    prefixNameWithV = false // defaults to true
    generateMessage = { version -> "Released by $user" }
  }
}

subprojects {

    apply plugin: 'sonar-runner'
    apply plugin: 'java'
    apply plugin: 'jacoco'
    apply from: "$rootDir/gradle/spock.gradle"
    apply from: "$rootDir/gradle/quality.gradle"

    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
    version = rootProject.version.toString()

    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

/*    mainClassName = "com.ebay.myriad.Main"*/

    group = "org.apache.mesos"

    ext {
        mesosVer = "0.22.1"
		elasticsearchVersion="1.4.5"
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {

        compile "org.apache.mesos:mesos:${mesosVer}"
        compile 'com.google.code.gson:gson:2.3'         // marshalling between the scheduler and executor

        testCompile 'junit:junit:4.11'
        testCompile 'commons-collections:commons-collections:3.2.1'
        testCompile "org.mockito:mockito-all:1.9.5"

    }

    sonarRunner {
        sonarProperties {
            property "sonar.sourceEncoding", "UTF-8"
            property "sonar.dynamicAnalysis", "reuseReports"
            property "sonar.jacoco.reportPath", "${buildDir}/jacoco/test.exec" 
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled true
            csv.enabled false
        }
    }
}
